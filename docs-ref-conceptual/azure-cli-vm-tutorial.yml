### YamlMime:Tutorial
title: Créez des machines virtuelles avec Azure CLI
metadata:
  title: Créez des machines virtuelles avec Azure CLI
  description: Prise en main d’Azure CLI en créant des machines virtuelles.
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurecli
  ms.date: 07/09/2018
  ms.author: sttramer
  author: sptramer
  manager: carmonm
  ms.devlang: azure-cli
  ms.topic: tutorial
  ms.prod: azure
  ms.technology: azure-cli
  clicktale: true
  ms.openlocfilehash: 5f857681a647caa8b1c50be1bebb807cf0ef94ff
  ms.sourcegitcommit: c4462456dfb17993f098d47c37bc19f4d78b8179
  ms.translationtype: HT
  ms.contentlocale: fr-FR
  ms.lasthandoff: 09/25/2018
  ms.locfileid: "47178012"
items:
- durationInMinutes: 1
  content: >-
    Dans ce didacticiel, vous allez découvrir toutes les étapes relatives à la configuration d’une machine virtuelle avec Azure CLI. Le didacticiel traite également des requêtes de sortie, de la réutilisation de ressources Azure et du nettoyage des ressources.


    Vous pouvez réaliser ce didacticiel avec l’expérience interactive proposée par Azure Cloud Shell, ou [installer l’interface CLI](install-azure-cli.md) localement.


    Utilisez __Ctrl-Maj-v__ (__Cmd-Maj-v__ sur macOS) pour coller du texte didactique dans Azure Cloud Shell.
- durationInMinutes: 1
  title: Se connecter
  content: "Si vous utilisez une installation locale de l’interface CLI, vous devez vous connecter avant d’effectuer toute autre étape.\n\n```azurecli\naz login\n```\n\nComplétez le processus d’authentification en suivant les étapes affichées dans votre terminal. "
- durationInMinutes: 1
  title: Créer un groupe de ressources
  content: >-
    Dans Azure, toutes les ressources sont allouées dans un groupe de gestion des ressources. Les groupes de ressources proposent des regroupements logiques de ressources, ce qui facilite leur utilisation en tant que collection. Pour ce didacticiel, toutes les ressources créées vont dans un seul groupe nommé `TutorialResources`.


    ```azurecli

    az group create --name TutorialResources --location eastus

    ```
- durationInMinutes: 4
  title: Création d'une machine virtuelle
  content: "Les machines virtuelles dans Azure ont un grand nombre de dépendances. L’interface CLI crée ces ressources selon les arguments de ligne de commande que vous spécifiez.\n\nCréez une nouvelle machine virtuelle exécutant Ubuntu, qui utilise l’authentification SSH pour la connexion.\n\n```azurecli\naz vm create --resource-group TutorialResources \\\n  --name TutorialVM1 \\\n  --image UbuntuLTS \\\n  --generate-ssh-keys \\\n  --verbose \n```\n\n> [!NOTE]\n> Si vous avez une clé SSH nommée `id_rsa` déjà disponible, utilisez-la pour l’authentification au lieu de générer une nouvelle clé.\n\nUne fois la machine virtuelle créée, vous pouvez voir les valeurs locales utilisées ainsi que les ressources Azure créées en raison de l’option `--verbose`.\nUne fois que la machine virtuelle est prête, JSON est retourné à partir du service Azure, y compris l’adresse IP publique.\n\n```json\n{\n  \"fqdns\": \"\",\n  \"id\": \"...\",\n  \"location\": \"eastus\",\n  \"macAddress\": \"...\",\n  \"powerState\": \"VM running\",\n  \"privateIpAddress\": \"...\",\n  \"publicIpAddress\": <PUBLIC_IP_ADDRESS>,\n  \"resourceGroup\": \"TutorialResources\",\n  \"zones\": \"\"\n}\n```\n\nVérifiez que la machine virtuelle est en cours d’exécution en vous connectant via SSH.\n\n```bash\nssh <PUBLIC_IP_ADDRESS>\n```\n\nDéconnectez-vous de la machine virtuelle.\n\nIl existe d’autres moyens d’obtenir cette adresse IP après le démarrage de la machine virtuelle. Dans la section suivante, vous verrez comment obtenir des informations détaillées sur la machine virtuelle, et comment les filtrer."
- durationInMinutes: 3
  title: Obtenir des informations sur les machines virtuelles avec des requêtes
  content: "Maintenant qu’une machine virtuelle a été créée, des informations détaillées la concernant peuvent être récupérées. La commande courante pour obtenir des informations à partir d’une ressource est `show`.\n\n```azurecli\naz vm show --name TutorialVM1 --resource-group TutorialResources\n```\n\nVous verrez un grand nombre d’informations qui peuvent être difficiles à analyser visuellement. Le JSON retourné contient des informations sur l’authentification, les interfaces réseau, le stockage et bien plus encore. Plus important encore, il contient les ID d’objet Azure pour les ressources auxquelles la machine virtuelle est connectée. Les ID d’objet permettent d’accéder directement à ces ressources pour obtenir plus d’informations sur la configuration et les capacités de la machine virtuelle. \n\nAfin d’extraire l’ID d’objet que vous souhaitez, vous devez utiliser l’argument `--query`. Les requêtes sont rédigées dans le [langage de requête JMESPath](http://jmespath.org). Commencez par obtenir l’ID d’objet du contrôleur d’interface réseau (NIC).\n\n```azurecli\naz vm show --name TutorialVM1 \\\n  --resource-group TutorialResources \\\n  --query 'networkProfile.networkInterfaces[].id' \\\n  --output tsv\n```\n\nBeaucoup de choses se produisent ici, simplement en ajoutant la requête. Chaque partie référence une clé dans le JSON de sortie, ou est un opérateur JMESPath.\n\n* `networkProfile` est une clé JSON de niveau supérieur, dont `networkInterfaces` est une sous-clé. Si une valeur JSON est un dictionnaire, ses clés sont référencées à partir de la clé parente avec l’opérateur `.`.\n* La valeur `networkInterfaces` est un tableau, elle est donc aplatie avec l’opérateur `[]`. Cet opérateur exécute le reste de la requête sur chaque élément du tableau. Dans ce cas, il obtient la valeur `id` de chaque élément du tableau.\n\nLe format de sortie `tsv` (valeurs séparées par des tabulations) est garanti pour n’inclure que les données de résultat et les espaces blancs constitués d’onglets et des sauts de ligne.\nÉtant donné que la valeur retournée est une chaîne unique, il est plus sûr de l’affecter directement à une variable d’environnement.\n\nAffectez l’ID d’objet de carte réseau à une variable d’environnement maintenant.\n\n```bash\nNIC_ID=$(az vm show -n TutorialVM1 -g TutorialResources \\\n  --query 'networkProfile.networkInterfaces[].id' \\\n  -o tsv)\n```\n\nCet exemple montre également l’utilisation d’arguments courts. Vous pouvez utiliser `-g` au lieu de `--resource-group`, `-n` au lieu de `--name`, et `-o` au lieu de `--output`."
- durationInMinutes: 4
  title: Définir les variables d’environnement à partir de la sortie CLI
  content: "Maintenant que vous avez l’ID de carte réseau, exécutez `az network nic show` pour obtenir ses informations.\n\n```azurecli\naz network nic show --ids $NIC_ID -g TutorialResources\n```\n\nCette commande affiche toutes les informations de l’interface réseau de la machine virtuelle. Ces données incluent des paramètres DNS, des informations d’adresse IP, des paramètres de sécurité et l’adresse MAC. Pour le moment, l’objectif est d’obtenir l’adresse IP publique et les ID d’objet de sous-réseau.\n\n```azurecli\naz network nic show --ids $NIC_ID \\\n  -g TutorialResources \\\n  --query '{IP:ipConfigurations[].publicIpAddress.id, Subnet:ipConfigurations[].subnet.id}' \n```\n\n```json\n{\n  \"IP\": [\n    \"/subscriptions/.../resourceGroups/TutorialResources/providers/Microsoft.Network/publicIPAddresses/TutorialVM1PublicIP\"\n  ],\n  \"Subnet\": [\n    \"/subscriptions/.../resourceGroups/TutorialResources/providers/Microsoft.Network/virtualNetworks/TutorialVM1VNET/subnets/TutorialVM1Subnet\"\n  ]\n}\n```\n\nCette commande affiche un objet JSON qui a des clés personnalisées (« IP » et « Sous-réseau ») pour les valeurs extraites. Bien que ce style de sortie ne soit pas utile pour les outils de ligne de commande, il aide à la lisibilité humaine et peut être utilisé avec des scripts personnalisés.\n\nPour pouvoir utiliser les outils de ligne de commande, modifiez la commande pour supprimer les clés JSON personnalisées et sortez en tant que `tsv`. Ce style de sortie peut être traité par la commande shell `read` pour charger les résultats dans plusieurs variables. Étant donné que deux valeurs sont affichées sur des lignes distinctes, le délimiteur de commande `read` doit être défini sur la chaîne vide plutôt que sur la valeur par défaut d’un espace blanc sans saut de ligne.\n\n```bash\nread -d '' IP_ID SUBNET_ID <<< $(az network nic show \\\n  --ids $NIC_ID -g TutorialResources \\\n  --query '[ipConfigurations[].publicIpAddress.id, ipConfigurations[].subnet.id]' \\\n  -o tsv)\n```\n\nVous n’allez pas avoir besoin de l’ID de sous-réseau immédiatement, mais vous devriez le stocker maintenant pour éviter d’avoir à effectuer une seconde recherche ultérieurement. Pour l’instant, utilisez l’ID d’objet IP public pour rechercher l’adresse IP publique, puis stockez-la dans une variable d’environnement.\n\n```bash\nVM1_IP_ADDR=$(az network public-ip show --ids $IP_ID \\\n  -g TutorialResources \\\n  --query ipAddress \\\n  -o tsv)\n```\n\nL’adresse IP de la machine virtuelle est désormais stockée dans une variable d’environnement. Vérifiez qu’il s’agit de la même valeur que vous avez utilisée pour vous connecter initialement à la machine virtuelle.\n\n```bash\necho $VM1_IP_ADDR\n```"
- durationInMinutes: 2
  title: Création d’une nouvelle machine virtuelle sur le sous-réseau existant
  content: >-
    La deuxième machine virtuelle utilise le sous-réseau existant. Vous pouvez ignorer quelques étapes pour obtenir immédiatement l’adresse IP publique de la nouvelle machine virtuelle stockée dans une variable d’environnement, étant donné qu’elle est retournée dans les informations de création de la machine virtuelle. Si vous avez besoin d’autres informations sur la machine virtuelle plus tard, elles peuvent toujours être obtenues à partir de la commande `az vm show`.


    ```bash

    VM2_IP_ADDR=$(az vm create -g TutorialResources \
      -n TutorialVM2 \
      --image UbuntuLTS \
      --generate-ssh-keys \
      --subnet $SUBNET_ID \
      --query publicIpAddress \
      -o tsv)
    ```


    À l’aide de l’adresse IP stockée, connectez-vous avec SSH à la machine virtuelle qui vient d’être créée.


    ```bash

    ssh $VM2_IP_ADDR

    ```


    Déconnectez-vous de la machine virtuelle.
- durationInMinutes: 2
  title: Nettoyage
  content: >-
    Maintenant que le didacticiel est terminé, il est temps de nettoyer les ressources créées. Vous pouvez supprimer des ressources individuelles avec la commande `delete`, mais la manière la plus sûre de supprimer toutes les ressources dans un groupe de ressources reste la commande `group delete`.


    ```azurecli

    az group delete --name TutorialResources --no-wait

    ```


    Cette commande supprime les ressources créées durant le didacticiel et assure leur libération dans le bon ordre. Le paramètre `--no-wait` empêche le blocage de l’interface CLI lors de la suppression. Si vous souhaitez attendre que la fin de la suppression ou regarder sa progression, utilisez la commande `group wait`.


    ```azurecli

    az group wait --name TutorialResources --deleted

    ```


    Une fois le nettoyage effectué, le didacticiel est terminé. Continuez pour obtenir un résumé de tout ce que vous avez appris et des liens vers des ressources qui vous aideront à effectuer les étapes suivantes.
- durationInMinutes: 1
  title: Résumé
  content: >-
    Félicitations ! Vous avez appris à créer des machines virtuelles avec des ressources nouvelles ou existantes, utilisé les arguments `--query` et `--output` pour capturer des données à stocker dans des variables d’environnement, et examiné certaines ressources créées pour des machines virtuelles Azure.


    Ce que vous allez faire maintenant dépend de la manière dont vous envisagez d’utiliser l’interface CLI. Il existe une variété de documents qui approfondissent les fonctionnalités traitées dans ce didacticiel.


    ### <a name="samples"></a>Exemples


    Si vous souhaitez commencer immédiatement avec des tâches spécifiques, consultez quelques exemples de scripts.


    * Utilisation des [machines virtuelles Linux](/azure/virtual-machines/linux/cli-samples?toc=%2fcli%2fazure%2ftoc.json) et des [machines virtuelles Windows](/azure/virtual-machines/windows/cli-samples?toc=%2fcli%2fazure%2ftoc.json)

    * Utilisation de [webapps](/azure/app-service/app-service-cli-samples?toc=%2Fcli%2Fazure%2Ftoc.json) et de [Azure Functions](/azure/azure-functions/functions-cli-samples?toc=%2fcli%2fazure%2ftoc.json)

    * Utilisation des bases de données - [bases de données SQL Azure](/azure/sql-database/sql-database-cli-samples?toc=%2fcli%2fazure%2ftoc.json), [PostgreSQL](/azure/postgresql/sample-scripts-azure-cli?toc=%2fcli%2fazure%2ftoc.json), [MySQL](/azure/mysql/sample-scripts-azure-cli?toc=%2fcli%2fazure%2ftoc.json), et [CosmosDB](/azure/cosmos-db/cli-samples?toc=%2fcli%2fazure%2ftoc.json).


    ### <a name="in-depth-cli-documentation"></a>Documentation CLI approfondie


    Il existe également des rubriques qui approfondissent les fonctionnalités CLI qui ont été démontrées dans le didacticiel.


    * En savoir plus sur les [formats de sortie](format-output-azure-cli.md)

    * En savoir plus sur les [requêtes de sortie](query-azure-cli.md)

    * En savoir plus sur les [autorisations dans Azure](authenticate-azure-cli.md)


    ### <a name="other-useful-documentation"></a>Autres documents utiles


    N’hésitez pas à prendre de votre temps pour explorer des fonctionnalités plus avancées de l’interface CLI, comme la [configuration des paramètres par défaut](azure-cli-configuration.md) ou les [extensions](azure-cli-extensions-overview.md).


    ### <a name="feedback"></a>Commentaires


    Si vous souhaitez donner votre avis, proposer des suggestions, ou poser des questions sur l’interface CLI, il existe plusieurs façons de nous contacter.


    * `az feedback` est une commande intégrée pour l’interface CLI qui permet d’envoyer des commentaires de forme libre à l’équipe.

    * Complétez une demande de fonctionnalité ou un rapport de bogues avec l’interface CLI dans le [référentiel Azure CLI](https://github.com/Azure/azure-cli).

    * Posez une question ou obtenez des précisions en signalant un problème dans le [référentiel de documentation Azure CLI](https://github.com/Azure/azure-docs-cli-python).


    Nous espérons que vous appréciez utiliser Azure CLI !
